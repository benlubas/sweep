/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DFLT 0
#define UTIL_L 1
#define SYM_L 2
#define CTRL_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };


/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
	    key-positions = <16 17>;
            bindings = <&kp ESC>;
        };
    };
};

/ {
    behaviors {
        tdCtrl: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPCTRL";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N1>, <&kp N2>, <&kp N3>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q       &kp W      &kp E       &kp R          &kp T         &kp Y            &kp U          &kp I       &kp O      &kp P
                &kp A       &kp S      &kp D       &kp F          &kp G         &kp H            &kp J          &kp K       &kp L      &kp SQT
                &mt LSHIFT Z   &kp X   &kp C       &kp V          &kp B         &kp N            &kp M          &kp COMMA   &kp DOT    &mt RSHIFT RET
                                                   &mo CTRL_L     &mo UTIL_L    &lt SYM_L SPACE  &mt CTRL TAB
            >;
        };

        util_layer {
            bindings = <
                &trans     &kp N7     &kp N8      &kp N9          &trans       &trans           &none          &kp UARW    &none       &trans
                &kp BKSP   &kp N4     &kp N5      &kp N6          &kp N0       &kp BKSP         &kp LARW       &kp DARW    &kp RARW    &kp SEMI
                &trans     &kp N1     &kp N2      &kp N3          &trans       &trans           &trans         &trans      &trans      &trans
                                                  &trans          &trans       &to DFLT         &kp LALT
            >;
        };

        sym_layer {
            bindings = <
                &kp LS(N1)    &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)          &kp LS(N6)  &kp LS(N7)   &kp LS(N8)   &kp LS(N9)   &kp LS(N0)   
                &trans        &kp GRAVE   &kp LBKT    &kp RBKT    &kp BSLH            &kp FSLH      &kp EQUAL    &kp MINUS    &kp SEMI     &trans
                &trans        &kp TILDE   &kp LBRC    &kp RBRC    &kp PIPE            &kp QUESTION  &kp PLUS     &kp UNDER    &kp COLN     &trans                                                        &trans          &trans       &to DFLT         &kp LALT
                                                      &trans      &trans              &to DFLT      &trans
            >;
        };

        cmnd_layer {
            bindings = <
                &kp CTRL(Q)  &kp CTRL(W) &kp CTRL(E)  &kp CTRL(R)     &kp CTRL(T)    &kp CTRL(Y)       &kp CTRL(U)     &kp CTRL(I)  &kp CTRL(O) &kp CTRL(P)
                &kp CTRL(A)  &kp CTRL(S) &kp CTRL(D)  &kp CTRL(F)     &kp CTRL(G)    &kp CTRL(H)       &kp CTRL(J)     &kp CTRL(K)  &kp CTRL(L) &kp SQT
                &kp CTRL(Z)  &kp CTRL(X) &kp CTRL(C)  &kp CTRL(V)     &kp CTRL(B)    &kp CTRL(N)       &kp CTRL(M)     &kp CTRL(COMMA)  &kp CTRL(DOT) &mt RSHIFT RET
                                                      &trans          &trans       &kp LALT         &trans
            >;
        };
    };
};
