
   
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DFLT 0
#define UTIL_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    combos {
	compatible = "zmk,combos";
	    combo_esc {
	       	timeout-ms = <50>;
		key-positions = <17 18>;
		bindings = <&kp ESC>;
	    };
	};
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q       &kp W      &kp E       &kp R          &kp T         &kp Y            &kp U          &kp I       &kp O      &kp P
                &kp A       &kp S      &kp D       &kp F          &kp G         &kp H            &kp J          &kp K       &kp L      &kp QUOT
                &mt LSHIFT Z   &kp X   &kp C       &kp V          &kp B         &kp N            &kp M          &kp COMMA   &kp DOT    &mt RSHIFT RET
                                                   &tog NUM_L     &mo UTIL_L    &kp SPACE        &tog NUM_L
            >;
        };

        util_layer {
            bindings = <
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &kp UARW    &trans      &trans
                &trans     &trans     &trans      &kp TAB         &trans       &kp BKSP         &kp LARW       &kp DARW    &kp RARW    &kp QUOTE
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans      &trans      &trans
                                                  &trans          &trans       &kp LCMD         &kp LALT
            >;
        };

        other_layer {
            bindings = <
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans      &trans     &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans      &trans     &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp HOME       &trans      &trans     &trans
                                                  &trans          &trans       &trans           &trans
            >;
        };

        num_layer {
            bindings = <
                &kp N1     &kp N2      &kp N3          &kp N4       &kp N5           &kp N6         &kp N7      &kp N8     &kp N9     &kp N0
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans      &trans     &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans      &trans     &trans
                                                  &trans          &trans       &trans           &trans
            >;
        };

        sym_layer {
            bindings = <
                &kp LS(N1)    &kp LS(N2)  &kp LS(N3)  &kp LS(N4) &kp LS(N5)          &kp LS(N6)  &kp LS(N7)   &kp LS(N8)   &kp LS(N9)   &kp LS(N0)   
                &kp TILDE     &trans      &kp LBKT    &kp RBKT   &BSLH           &trans   &kp PLUS     &kp MINUS    &trans    &kp QUOTE
                &trans        &trans      &trans      &trans     &trans           &trans   &trans    &trans    &trans    &trans
                                                   &kp LS(N0) &kp UNDER   &trans &trans
            >;
        };
    };
};
