/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAC_L 0
#define WIN_L 1
#define UTIL_L 2
#define SYM_L 3
#define CTRL_L 4
#define CMD_L 5

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };


/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
	    key-positions = <16 17>;
            bindings = <&kp ESC>;
        };
	combo_win {
	   timeout-ms = <50>;
	   key-positions = <0 1 2 3>;	   
	   bindings = <&to WIN_L>; 
	};
	
	combo_mac {
	   timeout-ms = <50>;
	   key-positions = <6 7 8 9>;	   
	   bindings = <&to MAC_L>;
	};
	
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        mac_base {
            bindings = <
                &kp Q       &kp W      &kp E       &kp R          &kp T         &kp Y            &kp U          &kp I       &kp O      &kp P
                &kp A       &kp S      &kp D       &kp F          &kp G         &kp H            &kp J          &kp K       &kp L      &kp SQT
                &mt LSHIFT Z   &kp X   &kp C       &kp V          &kp B         &kp N            &kp M          &kp COMMA   &kp DOT    &mt RSHIFT RET
                                                   &mo CMD_L      &mo UTIL_L    &lt SYM_L SPACE  &mt RCTRL TAB
            >;
        };
	
	win_base {
            bindings = <
                &kp Q       &kp W      &kp E       &kp R          &kp T         &kp Y            &kp U          &kp I       &kp O      &kp P
                &kp A       &kp S      &kp D       &kp F          &kp G         &kp H            &kp J          &kp K       &kp L      &kp SQT
                &mt LSHIFT Z   &kp X   &kp C       &kp V          &kp B         &kp N            &kp M          &kp COMMA   &kp DOT    &mt RSHIFT RET
                                                   &mo CTRL_L     &mo UTIL_L    &lt SYM_L SPACE  &mt RCTRL TAB
            >;
        };

        util_layer {
            bindings = <
                &kp N1          &kp N2     &kp N3      &kp N4          &kp N5       &kp N6           &kp N7         &kp N8      &kp N9      &kp N0
                &kp BKSP        &trans     &trans      &kp LA(BKSP)  &trans       &kp LARW         &kp DARW       &kp UARW    &kp RARW    &kp SEMI
                &trans          &trans     &trans      &trans          &trans       &trans           &trans         &trans      &trans      &trans
                                                  &trans          &trans       &trans         &trans
            >;
        };

        sym_layer {
            bindings = <
                &kp LS(N1)    &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)          &kp LS(N6)   &kp LS(N7)   &kp LS(N8)   &kp LS(N9)   &kp LS(N0)   
                &trans        &kp GRAVE   &kp LBKT    &kp RBKT    &kp BSLH            &trans       &kp EQUAL    &kp MINUS    &kp SEMI     &kp FSLH
                &trans        &kp TILDE   &kp LBRC    &kp RBRC    &kp PIPE            &trans       &kp PLUS     &kp UNDER    &kp COLN     &kp QUESTION 
                                                      &trans      &trans              &trans       &trans
            >;
        };

        ctrl_layer {
            bindings = <
                &kp RC(Q)  &kp RC(W) &kp RC(E)  &kp RC(R)     &kp RC(T)    &kp RC(Y)       &kp RC(U)     &kp RC(I)  &kp RC(O) &kp RC(P)
                &kp RC(A)  &kp RC(S) &kp RC(D)  &kp RC(F)     &kp RC(G)    &kp RC(H)       &kp RC(J)     &kp RC(K)  &kp RC(L) &kp RC(SQT)
                &kp RC(Z)  &kp RC(X) &kp RC(C)  &kp RC(V)     &kp RC(B)    &kp RC(N)       &kp RC(M)     &kp RC(COMMA)  &kp RC(DOT) &kp RC(FSLH)
                                                      &trans          &trans       &trans       &trans
            >;
        };
	
	cmnd_layer {
            bindings = <
                &kp LG(Q)  &kp LG(W) &kp LG(E)  &kp LG(R)     &kp LG(T)    &kp LG(Y)       &kp LG(U)     &kp LG(I)  &kp LG(O) &kp LG(P)
                &kp LG(A)  &kp LG(S) &kp LG(D)  &kp LG(F)     &kp LG(G)    &kp LG(H)       &kp LG(J)     &kp LG(K)  &kp LG(L) &kp LG(SQT)
                &kp LG(Z)  &kp LG(X) &kp LG(C)  &kp LG(V)     &kp LG(B)    &kp LG(N)       &kp LG(M)     &kp LG(COMMA)  &kp LG(DOT) &kp LG(FSLH)
                                                      &trans          &trans       &trans         &trans
            >;
        };
	
    };
};
