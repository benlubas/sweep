/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define MAC_L 0
#define WIN_L 1

#define WIN_UTIL 2
#define MAC_UTIL 3

#define WIN_NUM 4 
#define MAC_NUM 5

#define WIN_SYM 6 
#define MAC_SYM 7

#define WIN_FN 8
#define MAC_FN 9

#define SYS_L 10


// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };


/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
	        key-positions = <16 17>;
            bindings = <&kp ESC>;
        };
        combo_win {
            timeout-ms = <85>;
            key-positions = <0 1 2 3>;	   
            bindings = <&to WIN_L>; 
        }; 
        combo_mac {
            timeout-ms = <85>;
            key-positions = <6 7 8 9>;	   
            bindings = <&to MAC_L>;
        };
        combo_sys_layer {
            timeout-ms = <85>;
            key-positions = <20 21 22 23>;
            bindings = <&to SYS_L>;
        };
        combo_caps_word {
            timeout-ms = <85>;
            key-positions = <24 25>;	   
            bindings = <&caps_word>;
        };
        combo_del {
            timeout-ms = <70>;
            key-positions = <9 19>;
            bindings = <&kp DEL>;
        };
    };
};


/ {

    keymap {
        compatible = "zmk,keymap";

        mac_base {
            bindings = <
                &kp Q       &kp W      &kp E       &kp R           &kp T            &kp Y            &kp U          &kp I       &kp O      &kp P
                &kp A       &kp S      &kp D       &kp F           &kp G            &kp H            &kp J          &kp K       &kp L      &kp SQT
                &mt LSHIFT Z   &kp X   &kp C       &kp V           &kp B            &kp N            &kp M          &kp COMMA   &kp DOT    &mt RSHIFT RET
                                                   &kp LGUI        &to MAC_UTIL     &kp SPACE        &kp RCTRL
            >;
        };
	
	win_base {
            bindings = <
                &kp Q       &kp W      &kp E       &kp R           &kp T            &kp Y            &kp U          &kp I       &kp O      &kp P
                &kp A       &kp S      &kp D       &kp F           &kp G            &kp H            &kp J          &kp K       &kp L      &kp SQT
                &mt LSHIFT Z   &kp X   &kp C       &kp V           &kp B            &kp N            &kp M          &kp COMMA   &kp DOT    &mt RSHIFT RET
                                                   &kp LCTRL       &to WIN_UTIL     &kp SPACE        &kp LALT
            >;
        };

        win_util {
            bindings = <
                &trans      &trans      &trans      &trans          &trans           &kp LC(LS(TAB))  &trans         &trans      &kp LC(TAB) &trans      
                &to WIN_SYM &kp BKSP    &kp LALT    &kp LC(BKSP)    &kp TAB          &kp LARW         &kp DARW       &kp UARW    &kp RARW    &to WIN_NUM
                &trans      &trans      &trans      &trans          &trans           &trans           &trans         &trans      &trans      &trans      
                                                    &trans          &to WIN_UTIL     &to WIN_L        &kp LALT
            >;
        };

        mac_util {
            bindings = <
                &trans      &trans      &trans      &trans          &trans           &trans           &trans         &trans      &trans      &trans      
                &to MAC_SYM &kp BKSP    &kp LGUI    &kp LA(BKSP)    &kp TAB          &kp LARW         &kp DARW       &kp UARW    &kp RARW    &to MAC_NUM
                &trans      &trans      &trans      &trans          &trans           &trans           &trans         &trans      &trans      &trans      
                                                    &trans          &to MAC_UTIL     &to MAC_L        &kp LCTRL
            >;
        };

        win_num {
            bindings = <
                &kp LGUI    &kp N7     &kp N8      &kp N9          &kp MINUS        &trans           &mo WIN_FN     &trans      &trans      &trans          
                &kp N0      &kp N4     &kp N5      &kp N6          &kp PLUS         &kp LARW         &kp DARW       &kp UARW    &kp RARW    &trans
                &trans      &kp N1     &kp N2      &kp N3          &trans           &trans           &trans         &trans      &trans      &trans
                                                   &kp LCTRL       &to WIN_UTIL     &to WIN_L        &kp LALT
            >;
        };
        
        mac_num {
            bindings = <
                &kp LALT    &kp N7     &kp N8      &kp N9          &kp MINUS        &trans           &mo MAC_FN     &trans      &trans      &trans          
                &kp N0      &kp N4     &kp N5      &kp N6          &kp PLUS         &kp LARW         &kp DARW       &kp UARW    &kp RARW    &trans
                &trans      &kp N1     &kp N2      &kp N3          &trans           &trans           &trans         &trans      &trans      &trans           
                                                   &kp LGUI        &to MAC_UTIL     &to MAC_L        &kp LCTRL
            >;
        };

        windows_symbol {
            bindings = < 
                &kp EXCL  &kp AT      &kp PLUS    &kp EQUAL   &kp MINUS             &kp PERCENT  &kp AMPS   &kp STAR   &kp LS(N9)   &kp LS(N0)   
                &kp HASH  &kp GRAVE   &kp BSLH    &kp LBKT    &kp RBKT              &kp RBRC     &kp LBRC   &kp COLN   &kp SEMI     &kp FSLH
                &trans    &kp TILDE   &kp PIPE    &kp DOLLAR  &trans                &kp CARET    &kp UNDER  &trans     &trans       &kp QUESTION 
                                                  &trans      &to WIN_UTIL          &to WIN_L    &trans
            >; 
        };

        mac_symbol {
            bindings = < 
                &kp EXCL  &kp AT      &kp PLUS    &kp EQUAL   &kp MINUS             &kp PERCENT  &kp AMPS   &kp STAR   &kp LS(N9)   &kp LS(N0)   
                &kp HASH  &kp GRAVE   &kp BSLH    &kp LBKT    &kp RBKT              &kp RBRC     &kp LBRC   &kp COLN   &kp SEMI     &kp FSLH
                &trans    &kp TILDE   &kp PIPE    &kp DOLLAR  &trans                &kp CARET    &kp UNDER  &trans     &trans       &kp QUESTION 
                                                  &trans      &to MAC_UTIL          &to MAC_L    &trans
            >; 
        };

	win_fn {
            bindings = <
                &kp LALT    &kp F7     &kp F8      &kp F9          &kp F12          &trans           &trans         &trans      &trans      &trans          
                &kp LCTRL   &kp F4     &kp F5      &kp F6          &kp F11          &trans           &trans         &trans      &trans      &trans          
                &kp LGUI    &kp F1     &kp F2      &kp F3          &kp F10          &trans           &trans         &trans      &trans      &trans           
                                                   &mo WIN_FN      &to WIN_UTIL     &to WIN_L        &trans
            >;
        };

	mac_fn {
            bindings = <
                &kp LALT    &kp F7     &kp F8      &kp F9          &kp F12          &trans           &trans         &trans      &trans      &trans          
                &kp LCTRL   &kp F4     &kp F5      &kp F6          &kp F11          &trans           &trans         &trans      &trans      &trans          
                &kp LGUI    &kp F1     &kp F2      &kp F3          &kp F10          &trans           &trans         &trans      &trans      &trans           
                                                   &mo MAC_FN      &to MAC_UTIL     &to MAC_L        &trans
            >;
        };

	sys_layer {
            bindings = <
                &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 5   &trans          &trans      &trans    &trans     &ext_power EP_ON
                &trans          &trans     &trans          &trans          &reset            &reset          &trans      &trans    &trans     &ext_power EP_OFF 
                &trans          &trans     &bt BT_CLR      &trans          &bootloader       &bootloader     &trans      &trans    &trans     &trans
                                                           &trans          &trans            &trans          &trans
            >;
        };
	
    };
};
